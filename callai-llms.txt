# CallAI Helper Function

The `callAI` helper function provides an easy way to make AI requests to OpenRouter models with streaming support.

## Basic Usage

```javascript
// Simple text generation
const generator = callAI("What are three cool project ideas for React?");

// Process the streaming response
for await (const partialResponse of generator) {
  console.log(partialResponse); // Incrementally builds up the complete response
}
```

## JSON Schema Responses

To get structured JSON responses:

```javascript
// Define your schema
const todoSchema = {
  properties: {
    todos: {
      type: "array",
      items: { type: "string" }
    }
  }
};

// Request with schema
const generator = callAI("Give me a todo list for learning React", todoSchema);

// Process the streaming response
let finalResponse;
for await (const partialResponse of generator) {
  // Update UI with partial response
  finalResponse = partialResponse;
}

// Parse the JSON when done
const data = JSON.parse(finalResponse);
console.log(data.todos); // Array of todo items
```

## Specifying a Model

By default, the function uses `anthropic/claude-3-haiku`. You can specify a different model:

```javascript
// Use a specific model
const generator = callAI(
  "Explain quantum computing in simple terms", 
  null, 
  "openai/gpt-4o"
);
```

## Schema Property Reference

The schema parameter supports these properties:

```javascript
const weatherSchema = {
  properties: {
    location: {
      type: "string",
      description: "City or location name"
    },
    temperature: {
      type: "number",
      description: "Temperature in Celsius"
    },
    conditions: {
      type: "string",
      description: "Weather conditions description"
    }
  }
};
```

## Recommended Models

| Model | Best For | Speed vs Quality |
|-------|----------|------------------|
| `anthropic/claude-3-haiku` | Default, cost-effective | Fast, good quality |
| `openai/gpt-4o` | Best overall quality | Medium speed, highest quality |
| `openrouter/auto` | Auto-routing to available models | Variable |
| `anthropic/claude-3-opus` | Complex reasoning | Slower, highest quality |
| `mistralai/mistral-large` | Open weights alternative | Good balance |

## Auto-Router

Use OpenRouter's auto-routing to pick the best available model:

```javascript
const generator = callAI(
  "Generate a poem about coding", 
  null, 
  "openrouter/auto"
);
```

## Error Handling

The function handles errors gracefully and returns a friendly message if something goes wrong.

```javascript
try {
  const generator = callAI("Your prompt here");
  // Process response...
} catch (error) {
  console.error("Error:", error);
}
``` 